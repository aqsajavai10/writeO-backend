#spring.application.name=WriteOBackend
#spring.datasource.url=jdbc:mysql://localhost:3306/writeo_ai
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql=true
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=2GB
#spring.servlet.multipart.max-request-size=8MB
#
#
#
### Add these Keycloak-specific properties
##keycloak.realm=WriteO_AI
##keycloak.auth-server-url=http://localhost:8080
##keycloak.resource=spring-boot-app-client-id
##keycloak.credentials.secret=CaYP04NISmS5QJdL8g8VuK4OJL9gQlKl
##app.cors.allowed-origins=http://localhost:3000
### Add CORS configuration
##spring.security.cors.allowed-origins=http://localhost:3000
##spring.security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
##spring.security.cors.allowed-headers=*
##spring.security.cors.allow-credentials=true
### Logging
##logging.level.org.springframework.web=DEBUG
##logging.level.org.springframework.security=DEBUG
##logging.level.your.package.name=DEBUG
### Server
##server.error.include-message=always
##server.error.include-binding-errors=always
### Keycloak Admin Configuration
##keycloak.admin.username=admin
##keycloak.admin.password=admin
##keycloak.admin.realm=master
##keycloak.admin.client=admin-cli
#
#
#
#
#
## Spring Security OAuth2 Client Configuration
#spring.security.oauth2.client.registration.keycloak.auth-server-url=http://localhost:8080
#spring.security.oauth2.client.registration.keycloak.realm=WriteO_AI
#spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-app-client-id
#spring.security.oauth2.client.registration.keycloak.client-secret=CaYP04NISmS5QJdL8g8VuK4OJL9gQlKl
#spring.security.oauth2.client.registration.keycloak.scope=openid
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.provider.app.cors.allowed-origins=http://localhost:3000
#
#
#
#
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/WriteO_AI
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#
## Resource Server Configuration for JWT
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/WriteO_AI
##logging.level.org.springframework.security=DEBUG
#
#
#server.port=9090
#server.address=127.0.0.1



# Database Configuration
spring.application.name=WriteOBackend
spring.datasource.url=jdbc:mysql://localhost:3306/writeo_ai
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

# Server Configuration
server.port=9090
server.address=127.0.0.1


# Keycloak Admin Configuration
keycloak.admin.username=admin
keycloak.admin.password=admin
keycloak.admin.realm=master
keycloak.admin.client-id=admin-cli

# Keycloak Server Configuration
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=WriteO_AI
keycloak.resource=spring-boot-app-client-id
keycloak.credentials.secret=CaYP04NISmS5QJdL8g8VuK4OJL9gQlKl
keycloak.public-client=false
keycloak.bearer-only=true

# OAuth2 Client Registration
spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-app-client-id
spring.security.oauth2.client.registration.keycloak.client-secret=CaYP04NISmS5QJdL8g8VuK4OJL9gQlKl
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/WriteO_AI
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/WriteO_AI/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/WriteO_AI/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/WriteO_AI/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/WriteO_AI/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# OAuth2 Resource Server # JWT Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/WriteO_AI
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/WriteO_AI/protocol/openid-connect/certs

# Token Validation
spring.security.oauth2.resourceserver.jwt.token.expiry-threshold=30s

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Logging
logging.level.org.writeo=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.keycloak=DEBUG

# Error handling
server.error.include-message=always
server.error.include-stacktrace=always
server.error.include-binding-errors=always

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=2GB
spring.servlet.multipart.max-request-size=8MB

#jwt:
#access-token:expiration: 1800000  # 30 minutes in milliseconds
#refresh-token:expiration: 604800000  # 7 days in milliseconds
# Add these at the end of your properties file instead of the YAML format
jwt.expiration=1800000
jwt.refresh-token.expiration=604800000